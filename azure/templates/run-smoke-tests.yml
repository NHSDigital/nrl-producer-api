steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests

  - bash: |
      export RELEASE_RELEASEID=$(Build.BuildId)
      export SOURCE_COMMIT_ID=$(Build.SourceVersion)
      export APIGEE_ENVIRONMENT="$(ENVIRONMENT)"
      export SERVICE_BASE_PATH="$(SERVICE_BASE_PATH)"
      export STATUS_ENDPOINT_API_KEY="$(status-endpoint-api-key)"
      export PROXY_NAME="$(SERVICE_NAME)-$(STAGE_NAME)"
      export API_NAME="$(SERVICE_NAME)-$(STAGE_NAME)-$RANDOM"

      key=$(pyotp.parse_uri("otpauth://totp/${APIGEE_USERNAME}?secret=${APIGEE_OTP_KEY}"))
      echo ${key}

      curl https://login.apigee.com/resources/scripts/sso-cli/ssocli-bundle.zip -O
      unzip ssocli-bundle.zip

      export APIGEE_ACCESS_TOKEN=$(SSO_LOGIN_URL=https://login.apigee.com ./get_token -u ${APIGEE_USERNAME}:${APIGEE_PASSWORD} -m ${key})

      make smoketest
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: run smoketests

  - task: PublishTestResults@2
    displayName: 'Publish smoketest results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/smoketest-report.xml'
      failTaskOnFailedTests: true
